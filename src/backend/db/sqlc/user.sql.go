// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: user.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (username)
VALUES ($1)
RETURNING id, username, favorites, followers, following, mentions, tweets, created_at, updated_at
`

func (q *Queries) CreateUser(ctx context.Context, username string) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, username)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Favorites,
		&i.Followers,
		&i.Following,
		&i.Mentions,
		&i.Tweets,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, username, favorites, followers, following, mentions, tweets, created_at, updated_at
FROM users
WHERE username = $1
LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, username string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, username)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Favorites,
		&i.Followers,
		&i.Following,
		&i.Mentions,
		&i.Tweets,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
